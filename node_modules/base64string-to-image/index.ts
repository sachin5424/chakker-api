let base64StringToImage = async(ImageString:String, path:string, fileName:string) =>{
    return new Promise((resolve, reject) => {
        const fs = require('fs');
        var matches = ImageString.match(/^data:([A-Za-z-+\/]+);base64,(.+)$/),
            response:any = {};
            if(!matches){
                reject(
                  {  message:'invalid Base64'}
                )
            }
            console.log(matches);
        if (matches.length !== 3) {
            reject(
                {
                    message: 'Invalid Image string'
                }
            )
            // throw new Error('Invalid input string');
        }
    
        response.type = matches[1];
        response.data =  Buffer.from(matches[2], 'base64');
        var imageBuffer = response.data;
        var type = response.type;
        var extension = type.split('/')[1];
         fileName = fileName + "." + extension;
         if (!fs.existsSync(path)){
            fs.mkdirSync(path);
        }
        fs.writeFileSync(path+fileName, imageBuffer, 'utf8');
        // return fileName;
        resolve(fileName);
    })
  

}


export {
    base64StringToImage
}